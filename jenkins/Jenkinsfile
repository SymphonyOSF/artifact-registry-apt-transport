@Library(['sym-pipeline@main']) _

import com.symphony.cicd.SymphonyCICDUtils

def cicdUtils = new SymphonyCICDUtils()
def isPullRequest = cicdUtils.isPullRequest()

String projectOrg = "SymphonyOSF"
String projectRepo = "artifact-registry-apt-transport"


podTemplate(
  cloud: "kubernetes-build-cicd-jenkins-agent",
  yaml: readTrusted('jenkins/podTemplate.yaml'),
  yamlMergeStrategy: merge()
) {

node(POD_LABEL) {
    stage("setup"){
        sh "env"
    }
    stage("checkout") {        
        gitHash = gitCheckout()
        echo "Git hash: ${gitHash}"
    }
    stage("build") {
        container("ubuntu") {
            withCredentials([
                usernamePassword(credentialsId: 'repo-symphony', usernameVariable: 'ARTIFACTORY_USER', passwordVariable: 'ARTIFACTORY_TOKEN')
            ]) {
                withEnv([
                    "GOPROXY=https://\${ARTIFACTORY_USER}:\${ARTIFACTORY_TOKEN}@repo.symphony.com/artifactory/api/go/go-remote-mirror"
                ]) {
                    sh """
                    mv packaging/debian ./
                    echo 1.0 > debian/source/format
                    dpkg-buildpackage -us -uc -rfakeroot 
                    """

                    sh 'find ../ -type f -name "apt-transport-artifact-registry_20210304.00-g1_amd64.deb"'
                } 
            }
        }
    }

    // stage("publish") {
    //     sh """
    //     gcloud artifacts generic upload \
    //         --project=sym-prod-mr-tools-01 \
    //         --source= \
    //         --package=deb \
    //         --version=1.0 \
    //         --location=us-east4 \
    //         --repository=sym-generic
    //     """
    // }
}}

def addArtifactLinkToDescription(name, url) {
  String artifactLink = "<a href='${url}'>${name}</a><br>"
  currentBuild.description = currentBuild.description + artifactLink
}
